version: '3'

networks:
  backend-network:
    name: backend-network
    driver: bridge

volumes:
  postgres-volume:
  invoice-volume:      

services:
######################FastAPI SERVICES - Beginning###########################

  main_api_service:
    container_name: main_api_service
    build: ./main_api_service
    image: ghcr.io/wojciechignasiak/main_api_service:0.0.1
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USERNAME=${POSTGRES_USERNAME}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - KAFKA_HOST=${KAFKA_HOST}
      - KAFKA_PORT=${KAFKA_PORT}
    ports:
      - 8081:80
    expose:
      - 80
    networks:
      - backend-network
    restart: always
    volumes:
      - ./main_api_service:/usr/src/main_api_service/
      - invoice-volume:/usr/app/invoice/
    depends_on:
      - postgresql
      - redis
      - kafka

######################FastAPI SERVICES - End###########################

######################Databases SERVICES - Beginning###########################

  postgresql:
    container_name: postgresql
    image: postgres:16.0-alpine
    ports:
      - 5433:5432
    expose:
      - 5432
    networks:
      - backend-network
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    restart: always
    volumes:
      - postgres-volume:/var/lib/postgresql/data
      - "/etc/localtime:/etc/localtime:ro"

  redis:
    container_name: redis
    image: redis:7.2.2-alpine
    command: ["redis-server", "--save", "\"\"", "--appendonly", "no", "--requirepass", "${REDIS_PASSWORD}"]
    ports:
      - "6379:6379"
    expose:
      - 6379
    networks:
      - backend-network
    restart: always

  redisearch:
    container_name: redisearch
    image: redislabs/redisearch:2.8.8
    ports:
      - "6380:6380"
    expose:
      - 6380
    networks:
      - backend-network
    restart: always

######################Databases SERVICES - End###########################

######################Kafka SERVICES - Start###########################

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.1.arm64
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    networks:
      - backend-network
    restart: always
  
  kafka:
    image: confluentinc/cp-kafka:7.5.1.arm64
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    networks:
      - backend-network
    restart: always
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

######################Kafka SERVICES - End###########################